// Jose Javier Gonzalez Ortiz
// Libreria para el manejo de caracteres alfanumericos en el cubo LED
// font.h

#ifndef _FONT_H
#define _FONT_H

#include "cubo.h"
#include "stdint.h"


//static const uint8_t empty[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

static const uint8_t ascii[128][8] = {
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0000 (nul)
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0001
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0002
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0003
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0004
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0005
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0006
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0007
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0008
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0009
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+000A
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+000B
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+000C
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+000D
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+000E
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+000F
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0010
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0011
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0012
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0013
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0014
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0015
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0016
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0017
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0018
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0019
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+001A
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+001B
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+001C
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+001D
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+001E
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+001F
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+0020 (space)
{0x00, 0x18, 0x00, 0x18, 0x18, 0x3C, 0x3C, 0x18},       // U+0021 (!)
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6C, 0x6C},       // U+0022 (")
{0x00, 0x6C, 0x6C, 0xFE, 0x6C, 0xFE, 0x6C, 0x6C},       // U+0023 (#)
{0x00, 0x30, 0xF8, 0x0C, 0x78, 0xC0, 0x7C, 0x30},       // U+0024 ($)
{0x00, 0xC6, 0x66, 0x30, 0x18, 0xCC, 0xC6, 0x00},       // U+0025 (%)
{0x00, 0x76, 0xCC, 0xDC, 0x76, 0x38, 0x6C, 0x38},       // U+0026 (&)
{0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x60, 0x60},       // U+0027 (')
{0x00, 0x18, 0x30, 0x60, 0x60, 0x60, 0x30, 0x18},       // U+0028 (()
{0x00, 0x60, 0x30, 0x18, 0x18, 0x18, 0x30, 0x60},       // U+0029 ())
{0x00, 0x00, 0x66, 0x3C, 0xFF, 0x3C, 0x66, 0x00},       // U+002A (*)
{0x00, 0x00, 0x30, 0x30, 0xFC, 0x30, 0x30, 0x00},       // U+002B (+)
{0x60, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+002C (,)
{0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00},       // U+002D (-)
{0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+002E (.)
{0x00, 0x80, 0xC0, 0x60, 0x30, 0x18, 0x0C, 0x06},       // U+002F (/)
{0x00, 0x7C, 0xE6, 0xF6, 0xDE, 0xCE, 0xC6, 0x7C},       // U+0030 (0)
{0x00, 0xFC, 0x30, 0x30, 0x30, 0x30, 0x70, 0x30},       // U+0031 (1)
{0x00, 0xFC, 0xCC, 0x60, 0x38, 0x0C, 0xCC, 0x78},       // U+0032 (2)
{0x00, 0x78, 0xCC, 0x0C, 0x38, 0x0C, 0xCC, 0x78},       // U+0033 (3)
{0x00, 0x1E, 0x0C, 0xFE, 0xCC, 0x6C, 0x3C, 0x1C},       // U+0034 (4)
{0x00, 0x78, 0xCC, 0x0C, 0x0C, 0xF8, 0xC0, 0xFC},       // U+0035 (5)
{0x00, 0x78, 0xCC, 0xCC, 0xF8, 0xC0, 0x60, 0x38},       // U+0036 (6)
{0x00, 0x30, 0x30, 0x30, 0x18, 0x0C, 0xCC, 0xFC},       // U+0037 (7)
{0x00, 0x78, 0xCC, 0xCC, 0x78, 0xCC, 0xCC, 0x78},       // U+0038 (8)
{0x00, 0x70, 0x18, 0x0C, 0x7C, 0xCC, 0xCC, 0x78},       // U+0039 (9)
{0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00},       // U+003A (:)
{0x60, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00},       // U+003B (//)
{0x00, 0x18, 0x30, 0x60, 0xC0, 0x60, 0x30, 0x18},       // U+003C (<)
{0x00, 0x00, 0xFC, 0x00, 0x00, 0xFC, 0x00, 0x00},       // U+003D (=)
{0x00, 0x60, 0x30, 0x18, 0x0C, 0x18, 0x30, 0x60},       // U+003E (>)
{0x00, 0x30, 0x00, 0x30, 0x18, 0x0C, 0xCC, 0x78},       // U+003F (?)
{0x00, 0x78, 0xC0, 0xDE, 0xDE, 0xDE, 0xC6, 0x7C},       // U+0040 (@)
{0x00, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0x78, 0x30},       // U+0041 (A)
{0x00, 0xFC, 0x66, 0x66, 0x7C, 0x66, 0x66, 0xFC},       // U+0042 (B)
{0x00, 0x3C, 0x66, 0xC0, 0xC0, 0xC0, 0x66, 0x3C},       // U+0043 (C)
{0x00, 0xF8, 0x6C, 0x66, 0x66, 0x66, 0x6C, 0xF8},       // U+0044 (D)
{0x00, 0xFE, 0x62, 0x68, 0x78, 0x68, 0x62, 0xFE},       // U+0045 (E)
{0x00, 0xF0, 0x60, 0x68, 0x78, 0x68, 0x62, 0xFE},       // U+0046 (F)
{0x00, 0x3E, 0x66, 0xCE, 0xC0, 0xC0, 0x66, 0x3C},       // U+0047 (G)
{0x00, 0xCC, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0xCC},       // U+0048 (H)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78},       // U+0049 (I)
{0x00, 0x78, 0xCC, 0xCC, 0x0C, 0x0C, 0x0C, 0x1E},       // U+004A (J)
{0x00, 0xE6, 0x66, 0x6C, 0x78, 0x6C, 0x66, 0xE6},       // U+004B (K)
{0x00, 0xFE, 0x66, 0x62, 0x60, 0x60, 0x60, 0xF0},       // U+004C (L)
{0x00, 0xC6, 0xC6, 0xD6, 0xFE, 0xFE, 0xEE, 0xC6},       // U+004D (M)
{0x00, 0xC6, 0xC6, 0xCE, 0xDE, 0xF6, 0xE6, 0xC6},       // U+004E (N)
{0x00, 0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0x6C, 0x38},       // U+004F (O)
{0x00, 0xF0, 0x60, 0x60, 0x7C, 0x66, 0x66, 0xFC},       // U+0050 (P)
{0x00, 0x1C, 0x78, 0xDC, 0xCC, 0xCC, 0xCC, 0x78},       // U+0051 (Q)
{0x00, 0xE6, 0x66, 0x6C, 0x7C, 0x66, 0x66, 0xFC},       // U+0052 (R)
{0x00, 0x78, 0xCC, 0x1C, 0x70, 0xE0, 0xCC, 0x78},       // U+0053 (S)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x30, 0xB4, 0xFC},       // U+0054 (T)
{0x00, 0xFC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC},       // U+0055 (U)
{0x00, 0x30, 0x78, 0xCC, 0xCC, 0xCC, 0xCC, 0xCC},       // U+0056 (V)
{0x00, 0xC6, 0xEE, 0xFE, 0xD6, 0xC6, 0xC6, 0xC6},       // U+0057 (W)
{0x00, 0xC6, 0x6C, 0x38, 0x38, 0x6C, 0xC6, 0xC6},       // U+0058 (X)
{0x00, 0x78, 0x30, 0x30, 0x78, 0xCC, 0xCC, 0xCC},       // U+0059 (Y)
{0x00, 0xFE, 0x66, 0x32, 0x18, 0x8C, 0xC6, 0xFE},       // U+005A (Z)
{0x00, 0x78, 0x60, 0x60, 0x60, 0x60, 0x60, 0x78},       // U+005B ([)
{0x00, 0x02, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xC0},       // U+005C (\)
{0x00, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0x78},       // U+005D (])
{0x00, 0x00, 0x00, 0x00, 0xC6, 0x6C, 0x38, 0x10},       // U+005E (^)
{0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+005F (_)
{0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x30, 0x30},       // U+0060 (`)
{0x00, 0x76, 0xCC, 0x7C, 0x0C, 0x78, 0x00, 0x00},       // U+0061 (a)
{0x00, 0xDC, 0x66, 0x66, 0x7C, 0x60, 0x60, 0xE0},       // U+0062 (b)
{0x00, 0x78, 0xCC, 0xC0, 0xCC, 0x78, 0x00, 0x00},       // U+0063 (c)
{0x00, 0x76, 0xCC, 0xCC, 0x7C, 0x0C, 0x0C, 0x1C},       // U+0064 (d)
{0x00, 0x78, 0xC0, 0xFC, 0xCC, 0x78, 0x00, 0x00},       // U+0065 (e)
{0x00, 0xF0, 0x60, 0x60, 0xF0, 0x60, 0x6C, 0x38},       // U+0066 (f)
{0xF8, 0x0C, 0x7C, 0xCC, 0xCC, 0x76, 0x00, 0x00},       // U+0067 (g)
{0x00, 0xE6, 0x66, 0x66, 0x76, 0x6C, 0x60, 0xE0},       // U+0068 (h)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x70, 0x00, 0x30},       // U+0069 (i)
{0x78, 0xCC, 0xCC, 0x0C, 0x0C, 0x0C, 0x00, 0x0C},       // U+006A (j)
{0x00, 0xE6, 0x6C, 0x78, 0x6C, 0x66, 0x60, 0xE0},       // U+006B (k)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x70},       // U+006C (l)
{0x00, 0xC6, 0xD6, 0xFE, 0xFE, 0xCC, 0x00, 0x00},       // U+006D (m)
{0x00, 0xCC, 0xCC, 0xCC, 0xCC, 0xF8, 0x00, 0x00},       // U+006E (n)
{0x00, 0x78, 0xCC, 0xCC, 0xCC, 0x78, 0x00, 0x00},       // U+006F (o)
{0xF0, 0x60, 0x7C, 0x66, 0x66, 0xDC, 0x00, 0x00},       // U+0070 (p)
{0x1E, 0x0C, 0x7C, 0xCC, 0xCC, 0x76, 0x00, 0x00},       // U+0071 (q)
{0x00, 0xF0, 0x60, 0x66, 0x76, 0xDC, 0x00, 0x00},       // U+0072 (r)
{0x00, 0xF8, 0x0C, 0x78, 0xC0, 0x7C, 0x00, 0x00},       // U+0073 (s)
{0x00, 0x18, 0x34, 0x30, 0x30, 0x7C, 0x30, 0x10},       // U+0074 (t)
{0x00, 0x76, 0xCC, 0xCC, 0xCC, 0xCC, 0x00, 0x00},       // U+0075 (u)
{0x00, 0x30, 0x78, 0xCC, 0xCC, 0xCC, 0x00, 0x00},       // U+0076 (v)
{0x00, 0x6C, 0xFE, 0xFE, 0xD6, 0xC6, 0x00, 0x00},       // U+0077 (w)
{0x00, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0x00, 0x00},       // U+0078 (x)
{0xF8, 0x0C, 0x7C, 0xCC, 0xCC, 0xCC, 0x00, 0x00},       // U+0079 (y)
{0x00, 0xFC, 0x64, 0x30, 0x98, 0xFC, 0x00, 0x00},       // U+007A (z)
{0x00, 0x1C, 0x30, 0x30, 0xE0, 0x30, 0x30, 0x1C},       // U+007B ({)
{0x00, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18},       // U+007C (|)
{0x00, 0xE0, 0x30, 0x30, 0x1C, 0x30, 0x30, 0xE0},       // U+007D (})
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x76},       // U+007E (~)
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};      // U+007F

static const uint8_t greek[58][8] = {
{0x00, 0x18, 0x34, 0x30, 0x30, 0x30, 0x00, 0xB4},       // U+0390 (iota with tonos and diaeresis)
{0x00, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0x78, 0x30},       // U+0391 (Alpha)
{0x00, 0xFC, 0x66, 0x66, 0x7C, 0x66, 0x66, 0xFC},       // U+0392 (Beta)
{0x00, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xCC, 0xFC},       // U+0393 (Gamma)
{0x00, 0xFE, 0xC6, 0x6C, 0x6C, 0x38, 0x38, 0x10},       // U+0394 (Delta)
{0x00, 0xFE, 0x62, 0x68, 0x78, 0x68, 0x62, 0xFE},       // U+0395 (Epsilon)
{0x00, 0xFE, 0x66, 0x32, 0x18, 0x8C, 0xC6, 0xFE},       // U+0396 (Zeta)
{0x00, 0xCC, 0xCC, 0xCC, 0xFC, 0xCC, 0xCC, 0xCC},       // U+0397 (Eta)
{0x00, 0x38, 0x6C, 0xC6, 0xFE, 0xC6, 0x6C, 0x38},       // U+0398 (Theta)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x30, 0x30, 0x78},       // U+0399 (Iota)
{0x00, 0xE6, 0x66, 0x6C, 0x78, 0x6C, 0x66, 0xE6},       // U+039A (Kappa)
{0x00, 0xC6, 0xC6, 0x6C, 0x6C, 0x38, 0x38, 0x10},       // U+039B (Lambda)
{0x00, 0xC6, 0xC6, 0xD6, 0xFE, 0xFE, 0xEE, 0xC6},       // U+039C (Mu)
{0x00, 0xC6, 0xC6, 0xCE, 0xDE, 0xF6, 0xE6, 0xC6},       // U+039D (Nu)
{0x00, 0xFE, 0xC6, 0x00, 0x7C, 0x00, 0xC6, 0xFE},       // U+039E (Xi)
{0x00, 0x38, 0x6C, 0xC6, 0xC6, 0xC6, 0x6C, 0x38},       // U+039F (Omikron)
{0x00, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0x6C, 0xFE},       // U+03A0 (Pi)
{0x00, 0xF0, 0x60, 0x60, 0x7C, 0x66, 0x66, 0xFC},       // U+03A1 (Rho)
{0x02, 0x05, 0x09, 0xF2, 0x20, 0x40, 0x80, 0x00},       // U+03A2
{0x00, 0xFE, 0xC6, 0x60, 0x30, 0x60, 0xC6, 0xFE},       // U+03A3 (Sigma 2)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x30, 0xB4, 0xFC},       // U+03A4 (Tau)
{0x00, 0x78, 0x30, 0x30, 0x78, 0xCC, 0xCC, 0xCC},       // U+03A5 (Upsilon)
{0x00, 0x18, 0x7E, 0xDB, 0xDB, 0xDB, 0x7E, 0x18},       // U+03A6 (Phi)
{0x00, 0xC6, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0xC6},       // U+03A7 (Chi)
{0x00, 0x3C, 0x18, 0x18, 0x7E, 0xDB, 0xDB, 0xDB},       // U+03A8 (Psi)
{0x00, 0xEE, 0x6C, 0x6C, 0xC6, 0xC6, 0xC6, 0x7C},       // U+03A9 (Omega)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x78, 0x00, 0xCC},       // U+0399 (Iota with diaeresis)
{0x00, 0x78, 0x30, 0x78, 0xCC, 0xCC, 0x00, 0xCC},       // U+03A5 (Upsilon with diaeresis)
{0x00, 0x76, 0xDC, 0xC8, 0xDC, 0x76, 0x00, 0x0E},       // U+03AC (alpha aigu)
{0x00, 0x78, 0xC0, 0x70, 0xC0, 0x78, 0x00, 0x1C},       // U+03AD (epsilon aigu)
{0x0C, 0xCC, 0xCC, 0xCC, 0xCC, 0xF8, 0x00, 0x1C},       // U+03AE (eta aigu)
{0x00, 0x18, 0x34, 0x30, 0x30, 0x30, 0x00, 0x1C},       // U+03AF (iota aigu)
{0x00, 0x78, 0xCC, 0xCC, 0xCC, 0xCC, 0x00, 0xB4},       // U+03B0 (upsilon with tonos and diaeresis)
{0x00, 0x76, 0xDC, 0xC8, 0xDC, 0x76, 0x00, 0x00},       // U+03B1 (alpha)
{0xC0, 0xC0, 0xF8, 0xCC, 0xF8, 0xCC, 0x78, 0x00},       // U+03B2 (beta)
{0x00, 0x30, 0x30, 0x78, 0xCC, 0xCC, 0x00, 0x00},       // U+03B3 (gamma)
{0x00, 0x78, 0xCC, 0xCC, 0x7C, 0x18, 0x30, 0x1C},       // U+03B4 (delta)
{0x00, 0x78, 0xC0, 0x70, 0xC0, 0x78, 0x00, 0x00},       // U+03B5 (epsilon)
{0x38, 0x0C, 0x78, 0xC0, 0xC0, 0x60, 0xFC, 0x00},       // U+03B6 (zeta)
{0x0C, 0xCC, 0xCC, 0xCC, 0xCC, 0xF8, 0x00, 0x00},       // U+03B7 (eta)
{0x00, 0x78, 0xCC, 0xFC, 0xCC, 0x78, 0x00, 0x00},       // U+03B8 (theta)
{0x00, 0x18, 0x34, 0x30, 0x30, 0x30, 0x00, 0x00},       // U+03B9 (iota)
{0x00, 0xCC, 0xD8, 0xF0, 0xD8, 0xCC, 0x00, 0x00},       // U+03BA (kappa)
{0x00, 0xC6, 0x6C, 0x38, 0x30, 0x60, 0xC0, 0x00},       // U+03BB (lambda)
{0xC0, 0x60, 0x7C, 0x66, 0x66, 0x66, 0x00, 0x00},       // U+03BC (mu)
{0x00, 0x30, 0x78, 0xCC, 0xCC, 0xCC, 0x00, 0x00},       // U+03BD (nu)
{0x38, 0x0C, 0x78, 0xC0, 0xC0, 0x70, 0xC0, 0x78},       // U+03BE (xi)
{0x00, 0x78, 0xCC, 0xCC, 0xCC, 0x78, 0x00, 0x00},       // U+03BF (omikron)
{0x00, 0x6C, 0x6C, 0x6C, 0x6C, 0xFE, 0x00, 0x00},       // U+03C0 (pi)
{0x60, 0x60, 0x6C, 0x66, 0x66, 0x3C, 0x00, 0x00},       // U+03C1 (rho)
{0x38, 0x0C, 0x78, 0xC0, 0xC0, 0x7C, 0x00, 0x00},       // U+03C2 (sigma 1)
{0x00, 0x70, 0xD8, 0xD8, 0xD8, 0x7E, 0x00, 0x00},       // U+03C3 (sigma 2)
{0x00, 0x0C, 0x1A, 0x18, 0x18, 0x7E, 0x00, 0x00},       // U+03C4 (tau)
{0x00, 0x78, 0xCC, 0xCC, 0xCC, 0xCC, 0x00, 0x00},       // U+03C5 (upsilon)
{0x00, 0x18, 0x7E, 0xDB, 0xDB, 0x6E, 0x00, 0x00},       // U+03C6 (phi)
{0x00, 0xC6, 0x6C, 0x38, 0x38, 0x6C, 0xC6, 0x00},       // U+03C7 (chi)
{0x00, 0x18, 0x7E, 0xDB, 0xDB, 0xDB, 0x00, 0x00},       // U+03C8 (psi)
{0x00, 0x6C, 0xFE, 0xD6, 0xC6, 0x6C, 0x00, 0x00}};      // U+03C9 (omega)

static const uint8_t hiragana[96][8] = {
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+3040
{0x00, 0x64, 0xB2, 0x6A, 0x3C, 0x20, 0xFC, 0x20},       // U+3041 (Hiragana a)
{0x00, 0x64, 0xB2, 0x6A, 0x3C, 0x20, 0xFC, 0x20},       // U+3042 (Hiragana A)
{0x00, 0x40, 0xA4, 0x84, 0x88, 0x00, 0x00, 0x00},       // U+3043 (Hiragana i)
{0x00, 0x40, 0xA4, 0x84, 0x84, 0x88, 0x80, 0x00},       // U+3044 (Hiragana I)
{0x00, 0x18, 0x04, 0x44, 0x38, 0x00, 0x38, 0x00},       // U+3045 (Hiragana u)
{0x00, 0x18, 0x04, 0x02, 0x42, 0x3C, 0x00, 0x3C},       // U+3046 (Hiragana U)
{0x00, 0x46, 0x24, 0x1C, 0x08, 0x7C, 0x00, 0x38},       // U+3047 (Hiragana e)
{0x00, 0x46, 0x24, 0x1C, 0x08, 0x7C, 0x00, 0x38},       // U+3048 (Hiragana E)
{0x00, 0x44, 0xA2, 0x62, 0x3C, 0x20, 0xF2, 0x24},       // U+3049 (Hiragana o)
{0x00, 0x44, 0xA2, 0x62, 0x3C, 0x20, 0xF2, 0x24},       // U+304A (Hiragana O)
{0x00, 0x90, 0x48, 0x4A, 0x2A, 0xF2, 0x24, 0x20},       // U+304B (Hiragana KA)
{0x00, 0x90, 0x4A, 0x4A, 0x2A, 0xF0, 0x24, 0x22},       // U+304C (Hiragana GA)
{0x00, 0x3C, 0x40, 0x38, 0xFC, 0x10, 0xF8, 0x10},       // U+304D (Hiragana KI)
{0x00, 0x78, 0x80, 0x70, 0xF8, 0x20, 0xF4, 0x22},       // U+304E (Hiragana GI)
{0x00, 0x08, 0x10, 0x20, 0x40, 0x20, 0x10, 0x08},       // U+304F (Hiragana KU)
{0x00, 0x10, 0x20, 0x40, 0x84, 0x48, 0x22, 0x14},       // U+3050 (Hiragana GU)
{0x00, 0x08, 0x44, 0x84, 0x84, 0x9E, 0x44, 0x00},       // U+3051 (Hiragana KE)
{0x00, 0x10, 0x48, 0x88, 0xBC, 0x88, 0x44, 0x02},       // U+3052 (Hiragana GE)
{0x00, 0x3C, 0x40, 0x40, 0x00, 0x3C, 0x00, 0x00},       // U+3053 (Hiragana KO)
{0x00, 0x70, 0x80, 0x80, 0x04, 0x68, 0x02, 0x04},       // U+3054 (Hiragana GO)
{0x00, 0x38, 0x40, 0x40, 0x3C, 0x08, 0x7E, 0x08},       // U+3055 (Hiragana SA)
{0x00, 0x70, 0x80, 0x80, 0x74, 0x28, 0xF2, 0x24},       // U+3056 (Hiragana ZA)
{0x00, 0x38, 0x44, 0x42, 0x40, 0x40, 0x40, 0x00},       // U+3057 (Hiragana SI)
{0x00, 0x38, 0x44, 0x40, 0x44, 0x48, 0x42, 0x04},       // U+3058 (Hiragana ZI)
{0x00, 0x30, 0x08, 0x18, 0x28, 0x18, 0x7E, 0x08},       // U+3059 (Hiragana SU)
{0x00, 0xC0, 0x20, 0x60, 0xA0, 0x60, 0xF4, 0x22},       // U+305A (Hiragana ZU)
{0x00, 0x38, 0x40, 0x58, 0x44, 0xF4, 0x4E, 0x04},       // U+305B (Hiragana SE)
{0x00, 0x38, 0x40, 0x58, 0xE8, 0x5C, 0x0A, 0x01},       // U+305C (Hiragana ZE)
{0x00, 0x1C, 0x20, 0x10, 0xFE, 0x20, 0x10, 0x78},       // U+305D (Hiragana SO)
{0x00, 0x1C, 0x20, 0x10, 0xFE, 0x40, 0x24, 0xF2},       // U+305E (Hiragana ZO)
{0x00, 0x8E, 0x90, 0x40, 0x4E, 0x40, 0xF0, 0x40},       // U+305F (Hiragana TA)
{0x00, 0x8E, 0x90, 0x40, 0x4E, 0x40, 0xF4, 0x42},       // U+3060 (Hiragana DA)
{0x00, 0x1C, 0x02, 0x02, 0x3C, 0x10, 0x7E, 0x10},       // U+3061 (Hiragana TI)
{0x00, 0x38, 0x04, 0x04, 0x78, 0x20, 0xF4, 0x22},       // U+3062 (Hiragana DI)
{0x00, 0x38, 0x04, 0x44, 0x38, 0x00, 0x00, 0x00},       // U+3063 (Hiragana tu)
{0x00, 0x38, 0x04, 0x02, 0x82, 0x44, 0x38, 0x00},       // U+3064 (Hiragana TU)
{0x00, 0x38, 0x04, 0x04, 0x84, 0x78, 0x04, 0x02},       // U+3065 (Hiragana DU)
{0x00, 0x1C, 0x20, 0x20, 0x20, 0x10, 0x7C, 0x00},       // U+3066 (Hiragana TE)
{0x00, 0x1C, 0x20, 0x20, 0x24, 0x12, 0x7C, 0x00},       // U+3067 (Hiragana DE)
{0x00, 0x3C, 0x40, 0x40, 0x3C, 0x10, 0x20, 0x20},       // U+3068 (Hiragana TO)
{0x00, 0x3C, 0x40, 0x40, 0x3C, 0x10, 0x24, 0x22},       // U+3069 (Hiragana DO)
{0x00, 0x88, 0x94, 0x4E, 0x44, 0xE4, 0x40, 0x4C},       // U+306A (Hiragana NA)
{0x00, 0x40, 0x4E, 0x50, 0x40, 0x5E, 0x40, 0x00},       // U+306B (Hiragana NI)
{0x00, 0x44, 0xAA, 0xA6, 0xD2, 0x7C, 0x90, 0x10},       // U+306C (Hiragana NU)
{0x00, 0x24, 0x2A, 0x66, 0x32, 0x2C, 0xE0, 0x20},       // U+306D (Hiragana NE)
{0x00, 0x44, 0xA2, 0x92, 0x52, 0x3C, 0x00, 0x00},       // U+306E (Hiragana NO)
{0x00, 0x48, 0x54, 0x4E, 0x44, 0x5E, 0x44, 0x00},       // U+306F (Hiragana HA)
{0x00, 0x90, 0xA8, 0x9C, 0x88, 0xB8, 0x8A, 0x01},       // U+3070 (Hiragana BA)
{0x00, 0x90, 0xA8, 0x9C, 0x88, 0xBA, 0x8D, 0x02},       // U+3071 (Hiragana PA)
{0x00, 0x70, 0x88, 0x8A, 0x4C, 0xC8, 0x00, 0x00},       // U+3072 (Hiragana HI)
{0x00, 0x70, 0x88, 0x8A, 0x4C, 0xC0, 0x04, 0x02},       // U+3073 (Hiragana BI)
{0x00, 0x70, 0x88, 0x8A, 0x4C, 0xC2, 0x05, 0x02},       // U+3074 (Hiragana PI)
{0x00, 0x30, 0x08, 0x92, 0x54, 0x10, 0x00, 0x38},       // U+3075 (Hiragana HU)
{0x00, 0x30, 0x08, 0x92, 0x54, 0x10, 0x04, 0x32},       // U+3076 (Hiragana BU)
{0x00, 0x30, 0x12, 0x94, 0x50, 0x12, 0x05, 0x32},       // U+3077 (Hiragana PU)
{0x00, 0x02, 0x04, 0x88, 0x50, 0x20, 0x00, 0x00},       // U+3078 (Hiragana HE)
{0x00, 0x02, 0x04, 0x88, 0x54, 0x28, 0x02, 0x04},       // U+3079 (Hiragana BE)
{0x00, 0x02, 0x04, 0x88, 0x50, 0x24, 0x0A, 0x04},       // U+307A (Hiragana PE)
{0x00, 0x90, 0xAA, 0x9C, 0x88, 0xBE, 0x88, 0xBE},       // U+307B (Hiragana HO)
{0x00, 0x90, 0xAA, 0x9C, 0x88, 0xB8, 0x8A, 0xB9},       // U+307C (Hiragana BO)
{0x00, 0x90, 0xAA, 0x9C, 0x88, 0xBA, 0x8D, 0xBA},       // U+307D (Hiragana PO)
{0x00, 0x20, 0x54, 0x38, 0x10, 0x7C, 0x10, 0x7E},       // U+307E (Hiragana MA)
{0x00, 0x48, 0xA4, 0x7E, 0x24, 0x24, 0xE0, 0x00},       // U+307F (Hiragana MI)
{0x00, 0x3C, 0x64, 0xA0, 0x60, 0x26, 0xF0, 0x20},       // U+3080 (Hiragana MU)
{0x00, 0x54, 0xA2, 0xD2, 0x52, 0xBC, 0x90, 0x00},       // U+3081 (Hiragana ME)
{0x00, 0x3C, 0x42, 0x46, 0xF0, 0x40, 0xF0, 0x40},       // U+3082 (Hiragana MO)
{0x00, 0x20, 0x48, 0x44, 0xF8, 0x48, 0x00, 0x00},       // U+3083 (Hiragana ya)
{0x00, 0x20, 0x2C, 0x42, 0x42, 0xFC, 0x48, 0x00},       // U+3084 (Hiragana YA)
{0x00, 0x88, 0x9C, 0xCA, 0xBC, 0x88, 0x00, 0x00},       // U+3085 (Hiragana yu)
{0x00, 0x88, 0x9C, 0x8A, 0xCA, 0xBC, 0x88, 0x00},       // U+3086 (Hiragana YU)
{0x00, 0x20, 0x54, 0x38, 0x10, 0x1C, 0x10, 0x00},       // U+3087 (Hiragana yo)
{0x00, 0x20, 0x54, 0x38, 0x10, 0x1C, 0x10, 0x10},       // U+3088 (Hiragana YO)
{0x00, 0x0C, 0x42, 0x62, 0x5C, 0x40, 0x00, 0x78},       // U+3089 (Hiragana RA)
{0x00, 0x08, 0x24, 0x54, 0x44, 0x44, 0x04, 0x00},       // U+308A (Hiragana RI)
{0x00, 0x1C, 0x2A, 0x92, 0x42, 0x3C, 0x10, 0xF8},       // U+308B (Hiragana RU)
{0x00, 0x24, 0xAA, 0x68, 0x30, 0x20, 0xE0, 0x20},       // U+308C (Hiragana RE)
{0x00, 0x0C, 0x82, 0x42, 0x3C, 0x10, 0x08, 0xFC},       // U+308D (Hiragana RO)
{0x00, 0x54, 0x32, 0x1C, 0x70, 0x10, 0x00, 0x00},       // U+308E (Hiragana wa)
{0x00, 0x24, 0xA2, 0x62, 0x3C, 0x20, 0xE0, 0x20},       // U+308F (Hiragana WA)
{0x00, 0x4C, 0xAA, 0x96, 0x52, 0x3C, 0x10, 0x70},       // U+3090 (Hiragana WI)
{0x00, 0x92, 0x6C, 0x20, 0x9C, 0x42, 0x3C, 0x60},       // U+3091 (Hiragana WE)
{0x00, 0x0E, 0x10, 0x88, 0x76, 0x20, 0xF0, 0x20},       // U+3092 (Hiragana WO)
{0x00, 0x84, 0x4A, 0x6A, 0x30, 0x20, 0x10, 0x10},       // U+3093 (Hiragana N)
{0x00, 0x1C, 0x02, 0x42, 0x3C, 0x00, 0x74, 0x02},       // U+3094 (Hiragana VU)
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+3095
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+3096
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+3097
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+3098
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+3099 (voiced combinator mark)
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+309A (semivoiced combinator mark)
{0x00, 0x00, 0x00, 0x00, 0x02, 0x04, 0x01, 0x02},       // U+309B (Hiragana voiced mark)
{0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x05, 0x02},       // U+309C (Hiragana semivoiced mark)
{0x00, 0x30, 0x0C, 0x08, 0x10, 0x10, 0x00, 0x00},       // U+309D (Hiragana iteration mark)
{0x00, 0x60, 0x18, 0x10, 0x24, 0x28, 0x02, 0x04},       // U+309E (Hiragana voiced iteration mark)
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};      // U+309F

static const uint8_t extlatin[96][8] = {
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+00A0 (no break space)
{0x00, 0x18, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18},       // U+00A1 (inverted !)
{0x18, 0x18, 0x7E, 0xC0, 0xC0, 0x7E, 0x18, 0x18},       // U+00A2 (dollarcents)
{0x00, 0xFC, 0xE6, 0x60, 0xF0, 0x64, 0x6C, 0x38},       // U+00A3 (pound sterling)
{0x00, 0xC6, 0x7C, 0x6C, 0x7C, 0xC6, 0x00, 0x00},       // U+00A4 (currency mark)
{0x30, 0x30, 0xFC, 0x30, 0xFC, 0x78, 0xCC, 0xCC},       // U+00A5 (yen)
{0x00, 0x18, 0x18, 0x18, 0x00, 0x18, 0x18, 0x18},       // U+00A6 (broken pipe)
{0x78, 0xCC, 0x38, 0x6C, 0x6C, 0x38, 0x63, 0x3E},       // U+00A7 (paragraph)
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC},       // U+00A8 (diaeresis)
{0x3C, 0x42, 0x99, 0xA1, 0xA1, 0x99, 0x42, 0x3C},       // U+00A9 (copyright symbol)
{0x00, 0x00, 0x00, 0x00, 0x3E, 0x6C, 0x6C, 0x3C},       // U+00AA (superscript a)
{0x00, 0x00, 0x33, 0x66, 0xCC, 0x66, 0x33, 0x00},       // U+00AB (<<)
{0x00, 0x00, 0x0C, 0x0C, 0xFC, 0x00, 0x00, 0x00},       // U+00AC (gun pointing left)
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+00AD (soft hyphen)
{0x3C, 0x42, 0xA5, 0xB9, 0xA5, 0xB9, 0x42, 0x3C},       // U+00AE (registered symbol)
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E},       // U+00AF (macron)
{0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0x6C, 0x38},       // U+00B0 (degree)
{0x00, 0x7E, 0x00, 0x18, 0x18, 0x7E, 0x18, 0x18},       // U+00B1 (plusminus)
{0x00, 0x00, 0x00, 0x3C, 0x30, 0x18, 0x0C, 0x38},       // U+00B2 (superscript 2)
{0x00, 0x00, 0x00, 0x38, 0x0C, 0x18, 0x0C, 0x38},       // U+00B2 (superscript 3)
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x18},       // U+00B2 (aigu)
{0xC0, 0x60, 0x7C, 0x66, 0x66, 0x66, 0x00, 0x00},       // U+00B5 (mu)
{0x00, 0x1B, 0x1B, 0x1B, 0x7B, 0xDB, 0xDB, 0x7F},       // U+00B6 (pilcrow)
{0x00, 0x00, 0x00, 0x18, 0x18, 0x00, 0x00, 0x00},       // U+00B7 (central dot)
{0x78, 0x0C, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00},       // U+00B8 (cedille)
{0x00, 0x00, 0x00, 0x00, 0x38, 0x10, 0x30, 0x10},       // U+00B9 (superscript 1)
{0x00, 0x00, 0x00, 0x00, 0x38, 0x6C, 0x6C, 0x38},       // U+00BA (superscript 0)
{0x00, 0x00, 0xCC, 0x66, 0x33, 0x66, 0xCC, 0x00},       // U+00BB (>>)
{0xC0, 0xCF, 0x6F, 0x37, 0xBD, 0xCC, 0xC6, 0xC3},       // U+00BC (1/4)
{0x0F, 0xCC, 0x66, 0x33, 0xDE, 0xCC, 0xC6, 0xC3},       // U+00BD (1/2)
{0x01, 0x67, 0x35, 0xDB, 0x2D, 0xC6, 0x23, 0xC0},       // U+00BE (3/4)
{0x00, 0x78, 0xCC, 0xC0, 0x60, 0x30, 0x00, 0x30},       // U+00BF (inverted ?)
{0x00, 0xC6, 0xFE, 0xC6, 0x6C, 0x38, 0x00, 0xE0},       // U+00C0 (A grave)
{0x00, 0xC6, 0xFE, 0xC6, 0x6C, 0x38, 0x00, 0x0E},       // U+00C1 (A aigu)
{0x00, 0xC6, 0xFE, 0xC6, 0x7C, 0x00, 0x6C, 0x38},       // U+00C2 (A circumflex)
{0x00, 0xC6, 0xFE, 0xC6, 0x7C, 0x00, 0xDC, 0x76},       // U+00C3 (A ~)
{0x00, 0xC6, 0xC6, 0xFE, 0xC6, 0x6C, 0x38, 0xC6},       // U+00C4 (A umlaut)
{0x00, 0xCC, 0xFC, 0xCC, 0x78, 0x00, 0x30, 0x30},       // U+00C5 (A ring)
{0x00, 0xCE, 0xCC, 0xCC, 0xFE, 0xCC, 0x6C, 0x3E},       // U+00C6 (AE)
{0x78, 0x0C, 0x18, 0x78, 0xCC, 0xC0, 0xCC, 0x78},       // U+00C7 (C cedille)
{0x00, 0xFC, 0x60, 0x78, 0x60, 0xFC, 0x00, 0xE0},       // U+00C8 (E grave)
{0x00, 0xFC, 0x60, 0x78, 0x60, 0xFC, 0x00, 0x1C},       // U+00C9 (E aigu)
{0x00, 0xFC, 0x60, 0x78, 0x60, 0xFC, 0x48, 0x30},       // U+00CA (E circumflex)
{0x00, 0xFC, 0x60, 0x78, 0x60, 0xFC, 0x00, 0x6C},       // U+00CB (E umlaut)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x78, 0x00, 0xE0},       // U+00CC (I grave)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x78, 0x00, 0x1C},       // U+00CD (I aigu)
{0x00, 0x78, 0x30, 0x30, 0x78, 0x00, 0x48, 0x30},       // U+00CE (I circumflex)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x78, 0x00, 0xCC},       // U+00CF (I umlaut)
{0x00, 0xFC, 0x66, 0x66, 0xF6, 0xF6, 0x66, 0xFC},       // U+00D0 (Eth)
{0x00, 0xCC, 0xDC, 0xFC, 0xEC, 0xCC, 0x00, 0xFC},       // U+00D1 (N ~)
{0x00, 0x18, 0x3C, 0x66, 0x3C, 0x18, 0x00, 0x70},       // U+00D2 (O grave)
{0x00, 0x18, 0x3C, 0x66, 0x3C, 0x18, 0x00, 0x0E},       // U+00D3 (O aigu)
{0x00, 0x18, 0x3C, 0x66, 0x3C, 0x18, 0x66, 0x3C},       // U+00D4 (O circumflex)
{0x00, 0x7C, 0xC6, 0xC6, 0x7C, 0x00, 0xDC, 0x76},       // U+00D5 (O ~)
{0x00, 0x18, 0x3C, 0x66, 0x66, 0x3C, 0x18, 0xC3},       // U+00D6 (O umlaut)
{0x00, 0x00, 0x6C, 0x38, 0x10, 0x38, 0x6C, 0x00},       // U+00D7 (multiplicative x)
{0x00, 0xB8, 0x6C, 0xF6, 0xDE, 0xCE, 0x6C, 0x3A},       // U+00D8 (O stroke)
{0x00, 0x3C, 0x66, 0x66, 0x66, 0x66, 0x00, 0x70},       // U+00D9 (U grave)
{0x00, 0x3C, 0x66, 0x66, 0x66, 0x66, 0x00, 0x0E},       // U+00DA (U aigu)
{0x00, 0x3C, 0x66, 0x66, 0x66, 0x00, 0x66, 0x3C},       // U+00DB (U circumflex)
{0x00, 0x78, 0xCC, 0xCC, 0xCC, 0xCC, 0x00, 0xCC},       // U+00DC (U umlaut)
{0x00, 0x18, 0x18, 0x3C, 0x66, 0x66, 0x00, 0x0E},       // U+00DD (Y aigu)
{0xF0, 0x60, 0x7C, 0x66, 0x66, 0x7C, 0x60, 0xF0},       // U+00DE (Thorn)
{0xC0, 0xC0, 0xF8, 0xCC, 0xF8, 0xCC, 0x78, 0x00},       // U+00DF (beta)
{0x00, 0x7E, 0xCC, 0x7C, 0x0C, 0x78, 0x00, 0xE0},       // U+00E0 (a grave)
{0x00, 0x7E, 0xCC, 0x7C, 0x0C, 0x78, 0x00, 0x1C},       // U+00E1 (a aigu)
{0x00, 0x3F, 0x66, 0x3E, 0x06, 0x3C, 0xC3, 0x7E},       // U+00E2 (a circumflex)
{0x00, 0x7E, 0xCC, 0x7C, 0x0C, 0x78, 0xDC, 0x76},       // U+00E3 (a ~)
{0x00, 0x7E, 0xCC, 0x7C, 0x0C, 0x78, 0x00, 0xCC},       // U+00E4 (a umlaut)
{0x00, 0x7E, 0xCC, 0x7C, 0x0C, 0x78, 0x30, 0x30},       // U+00E5 (a ring)
{0x00, 0x7F, 0xCC, 0x7F, 0x0C, 0x7F, 0x00, 0x00},       // U+00E6 (ae)
{0x38, 0x0C, 0x78, 0xC0, 0xC0, 0x78, 0x00, 0x00},       // U+00E7 (c cedille)
{0x00, 0x78, 0xC0, 0xFC, 0xCC, 0x78, 0x00, 0xE0},       // U+00E8 (e grave)
{0x00, 0x78, 0xC0, 0xFC, 0xCC, 0x78, 0x00, 0x1C},       // U+00E9 (e aigu)
{0x00, 0x3C, 0x60, 0x7E, 0x66, 0x3C, 0xC3, 0x7E},       // U+00EA (e circumflex)
{0x00, 0x78, 0xC0, 0xFC, 0xCC, 0x78, 0x00, 0xCC},       // U+00EB (e umlaut)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x70, 0x00, 0xE0},       // U+00EC (i grave)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x70, 0x00, 0x38},       // U+00ED (i augu)
{0x00, 0x3C, 0x18, 0x18, 0x18, 0x38, 0xC6, 0x7C},       // U+00EE (i circumflex)
{0x00, 0x78, 0x30, 0x30, 0x30, 0x70, 0x00, 0xCC},       // U+00EF (i umlaut)
{0x00, 0x78, 0xCC, 0x7C, 0x0C, 0xD8, 0x70, 0xD8},       // U+00F0 (eth)
{0x00, 0xCC, 0xCC, 0xCC, 0xF8, 0x00, 0xF8, 0x00},       // U+00F1 (n ~)
{0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00, 0xE0, 0x00},       // U+00F2 (o grave)
{0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00, 0x1C, 0x00},       // U+00F3 (o aigu)
{0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00, 0xCC, 0x78},       // U+00F4 (o circumflex)
{0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00, 0xDC, 0x76},       // U+00F5 (o ~)
{0x00, 0x78, 0xCC, 0xCC, 0x78, 0x00, 0xCC, 0x00},       // U+00F6 (o umlaut)
{0x00, 0x18, 0x18, 0x00, 0x7E, 0x00, 0x18, 0x18},       // U+00F7 (division)
{0x60, 0x3C, 0x76, 0x7E, 0x6E, 0x3C, 0x06, 0x00},       // U+00F8 (o stroke)
{0x00, 0x7E, 0xCC, 0xCC, 0xCC, 0x00, 0xE0, 0x00},       // U+00F9 (u grave)
{0x00, 0x7E, 0xCC, 0xCC, 0xCC, 0x00, 0x1C, 0x00},       // U+00FA (u aigu)
{0x00, 0x7E, 0xCC, 0xCC, 0xCC, 0x00, 0xCC, 0x78},       // U+00FB (u circumflex)
{0x00, 0x7E, 0xCC, 0xCC, 0xCC, 0x00, 0xCC, 0x00},       // U+00FC (u umlaut)
{0xF8, 0x0C, 0x7C, 0xCC, 0xCC, 0x00, 0x1C, 0x00},       // U+00FD (y aigu)
{0x00, 0x60, 0x7C, 0x66, 0x7C, 0x60, 0x00, 0x00},       // U+00FE (thorn)
{0xF8, 0x0C, 0x7C, 0xCC, 0xCC, 0x00, 0xCC, 0x00}};      // U+00FF (y umlaut)


void putAscii(uint8_t dim, int8_t coord, char c);
void effect_push_message(char* message,uint8_t dim, uint8_t space,uint8_t reset);
void effect_broadway_message(char* message,uint8_t reset);
void effect_slide_message(char* message, uint8_t reset);



#endif