ASCII = [[0x00, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x1E, 0x0C],   # U+0041 (A)
    [0x00, 0x3F, 0x66, 0x66, 0x3E, 0x66, 0x66, 0x3F],   # U+0042 (B)
    [0x00, 0x3C, 0x66, 0x03, 0x03, 0x03, 0x66, 0x3C],   # U+0043 (C)
    [0x00, 0x1F, 0x36, 0x66, 0x66, 0x66, 0x36, 0x1F],   # U+0044 (D)
    [0x00, 0x7F, 0x46, 0x16, 0x1E, 0x16, 0x46, 0x7F],   # U+0045 (E)
    [0x00, 0x0F, 0x06, 0x16, 0x1E, 0x16, 0x46, 0x7F],   # U+0046 (F)
    [0x00, 0x7C, 0x66, 0x73, 0x03, 0x03, 0x66, 0x3C],   # U+0047 (G)
    [0x00, 0x33, 0x33, 0x33, 0x3F, 0x33, 0x33, 0x33],   # U+0048 (H)
    [0x00, 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x1E],   # U+0049 (I)
    [0x00, 0x1E, 0x33, 0x33, 0x30, 0x30, 0x30, 0x78],   # U+004A (J)
    [0x00, 0x67, 0x66, 0x36, 0x1E, 0x36, 0x66, 0x67],   # U+004B (K)
    [0x00, 0x7F, 0x66, 0x46, 0x06, 0x06, 0x06, 0x0F],   # U+004C (L)
    [0x00, 0x63, 0x63, 0x6B, 0x7F, 0x7F, 0x77, 0x63],   # U+004D (M)
    [0x00, 0x63, 0x63, 0x73, 0x7B, 0x6F, 0x67, 0x63],   # U+004E (N)
    [0x00, 0x1C, 0x36, 0x63, 0x63, 0x63, 0x36, 0x1C],   # U+004F (O)
    [0x00, 0x0F, 0x06, 0x06, 0x3E, 0x66, 0x66, 0x3F],   # U+0050 (P)
    [0x00, 0x38, 0x1E, 0x3B, 0x33, 0x33, 0x33, 0x1E],   # U+0051 (Q)
    [0x00, 0x67, 0x66, 0x36, 0x3E, 0x66, 0x66, 0x3F],   # U+0052 (R)
    [0x00, 0x1E, 0x33, 0x38, 0x0E, 0x07, 0x33, 0x1E],   # U+0053 (S)
    [0x00, 0x1E, 0x0C, 0x0C, 0x0C, 0x0C, 0x2D, 0x3F],   # U+0054 (T)
    [0x00, 0x3F, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33],   # U+0055 (U)
    [0x00, 0x0C, 0x1E, 0x33, 0x33, 0x33, 0x33, 0x33],   # U+0056 (V)
    [0x00, 0x63, 0x77, 0x7F, 0x6B, 0x63, 0x63, 0x63],   # U+0057 (W)
    [0x00, 0x63, 0x36, 0x1C, 0x1C, 0x36, 0x63, 0x63],   # U+0058 (X)
    [0x00, 0x1E, 0x0C, 0x0C, 0x1E, 0x33, 0x33, 0x33],   # U+0059 (Y)
    [0x00, 0x7F, 0x66, 0x4C, 0x18, 0x31, 0x63, 0x7F]]   # U+005A (Z)

def reverse(H):
    result = 0;
    for i in range(1,9):
        result += H%2;
        H/=2;
        result *= 2;
    return result/2;

print "0xff", hex(reverse(0xff))

for letter in ASCII:

    s ="{"
    for chain in letter[::-1]:
        k = hex(reverse(chain))
        if(len(k) == 3):
            k = k[:2]+"0"+k[-1]
        k = k[:2]+k[2:].upper()
        s += k+", "
    print s[:-2]+"},"


